{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAEhCC,EAAUH,EAAOE,cAAe,kBAChCE,EAASJ,EAAOE,cAAe,iBAC/BG,EAAWL,EAAOE,cAAe,mBAoCvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CA5CbR,EAAOgB,iBAAiB,UAGxB,SAA6BC,GAG3B,GAFAA,EAAMC,iBAEFf,EAAQgB,cAAgB,GAAKf,EAAOe,cAAgB,GAAKd,EAASc,eAAiB,EAErF,YADArB,EAAAsB,OAAOC,QAAQ,8BAIjB,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAASc,cAAeG,GAAK,EAAG,CAClDtB,EAAOuB,iBAAiBC,UAAW,EAEnC,MAAMC,EAAetB,EAAQgB,cAAgBG,EAAIlB,EAAOe,cAExCb,EAAcgB,EAAI,EAAGG,GAE7BC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACxBV,EAAAsB,OAAOO,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAE9DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBV,EAAAsB,OAAOS,QAAQ,sBAAoBtB,QAAeC,MAAU,G,CAKlEO,YAAW,KACTf,EAAOuB,iBAAiBC,UAAW,CAAK,GACvCrB,EAAQgB,cAAgBd,EAASc,cAAgBf,EAAOe,c","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nconst delayEl = formEl.querySelector(('[name=\"delay\"]'));\nconst stepEl = formEl.querySelector(('[name=\"step\"]'));\nconst amountEl = formEl.querySelector(('[name=\"amount\"]'));\n\n\nformEl.addEventListener('submit', onFormElementSubmit);\n\n\nfunction onFormElementSubmit(event) {\n  event.preventDefault();\n\n  if (delayEl.valueAsNumber < 0 || stepEl.valueAsNumber < 0 || amountEl.valueAsNumber <= 0) {\n    Notify.warning('Please enter valid values!');\n    return;\n  }\n\n  for (let i = 0; i < amountEl.valueAsNumber; i += 1) {\n    formEl.lastElementChild.disabled = true;\n\n    const promiseDelay = delayEl.valueAsNumber + i * stepEl.valueAsNumber;\n\n    const promise = createPromise(i + 1, promiseDelay);\n\n    promise.then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n\n  }\n\n  setTimeout(() => {\n    formEl.lastElementChild.disabled = false;\n  }, delayEl.valueAsNumber + amountEl.valueAsNumber * stepEl.valueAsNumber)\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n\n    }, delay);\n  })\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","valueAsNumber","Notify","warning","i","lastElementChild","disabled","promiseDelay","then","success","catch","failure"],"version":3,"file":"03-promises.66c2874e.js.map"}